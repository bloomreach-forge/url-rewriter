
development.mode = false

check.repositories.running = false
repository.pool.user.name.separator = @

# the global user that should be able to read all configuration and retrieve all events
hstconfigreader.repository.address = vm://
hstconfigreader.repository.user.name = admin
hstconfigreader.repository.pool.name = hstconfigreader
hstconfigreader.repository.password = admin

# session pooling repository for binary resource access
binaries.repository.address = vm://
binaries.repository.user.name = admin
binaries.repository.pool.name = binaries
binaries.repository.password = admin

# session pooling repository for default live site access. (typically disallowed on unpublished contents.)
default.repository.address = vm://
default.repository.user.name = admin
default.repository.pool.name = default
default.repository.password = admin

# session pooling repository for preview site access. (typically allowed on unpublished and published contents.)
preview.repository.address = vm://
preview.repository.user.name = admin
preview.repository.pool.name = preview
preview.repository.password = admin

# session pooling repository for write access
writable.repository.address = vm://
writable.repository.user.name = admin
writable.repository.pool.name = writable
writable.repository.password = admin

binaries.prefix.path = /binaries

# Edit the following if you want to use different web resource url prefix for (non-slash-leading) relative dispatch urls.
# The default prefix is '/WEB-INF/'.
# dispatch.url.prefix = /WEB-INF/

#component.error.page = jsp/errorpages/component-error-page.jsp
component.error.page = 

# the classpath resource path for custom bean definitions to override HST core components
assembly.overrides = META-INF/hst-assembly/overrides/*.xml

# the link for beans/nodes that cannot be rewritten to a link
linkrewriting.failed.path = /pagenotfound

# the location of the cms for the [surf & edit] button
cms.location = http://localhost:8080/cms 

# JMX MBeans Connector
#management.rmi.registry.port = 9875
#management.connector.server.objectName = connector:name=rmi
#management.connector.server.locate.existing = false
#management.connector.server.serviceUrl = service:jmx:rmi://localhost/jndi/rmi://localhost:9875/hstjmxconnector

# HST JAAS login configuration
java.security.auth.login.config = classpath:/org/hippoecm/hst/security/impl/login.conf


# Use rmi://127.0.0.1:1099/hipporepository instead of vm:// to connect over rmi

