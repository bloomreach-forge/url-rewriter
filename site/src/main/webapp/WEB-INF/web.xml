<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://java.sun.com/xml/ns/j2ee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         version="2.4"
         xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee   http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd">
  <display-name>Hippo Site Toolkit Container Web Application</display-name>

  <context-param>
    <param-name>webAppRootKey</param-name>
    <param-value>site.webapp.root</param-value>
  </context-param>

  <!-- I18N  -->
  <context-param>
    <param-name>javax.servlet.jsp.jstl.fmt.localizationContext</param-name>
    <param-value>messages</param-value>
  </context-param>

  <!--
    HST-2 Content Beans Annotation Configuration. You can configure it
    with either xml or classes location filter. For example, if the
    parameter value is set to '/WEB-INF/beans-annotated-classes.xml',
    all the annotated bean classes will be loaded from the xml
    configuration file. If the parameter value is set to
    'classpath*:org/hippoecm/hst/demo/beans/**/*.class', all the
    annotated bean classes will be automatically scanned from the
    location. If the context parameter is not configured,
    '/WEB-INF/beans-annotated-classes.xml' will be used by default.
    Also, you can configure multiple classpath resource location filters
    separated by comma or white spaces. For example, you can set the
    parameter value to
    'classpath*:org/hippoecm/hst/demo/beans/**/*.class,
    classpath*:org/hippoecm/hst/demo2/beans/**/*.class' to specify two
    or more different location filters.
  -->
  <context-param>
    <param-name>hst-beans-annotated-classes</param-name>
    <param-value>classpath*:org/onehippo/forge/rewriting/beans/**/*.class</param-value>
  </context-param>

  <filter>
    <filter-name>RewriteFilter</filter-name>
    <filter-class>org.onehippo.forge.rewriting.HippoRewriteFilter</filter-class>
    <!-- sets up log level (will be logged to context log)
can be: TRACE, DEBUG, INFO, WARN, ERROR, FATAL  -->
    <init-param>
      <param-name>logLevel</param-name>
      <param-value>STDOUT:DEBUG</param-value>
    </init-param>
    <!-- you can disable status page if desired
can be: true, false (default true)              -->
    <init-param>
      <param-name>statusEnabled</param-name>
      <param-value>true</param-value>
    </init-param>
    <!-- you can change status path so that it does not
conflict with your installed apps (note, defaults
to /rewrite-status) note, must start with /     -->
    <init-param>
      <param-name>statusPath</param-name>
      <param-value>/status</param-value>
    </init-param>
  </filter>
  <filter>
    <filter-name>XSSUrlFilter</filter-name>
    <filter-class>org.hippoecm.hst.container.XSSUrlFilter</filter-class>
  </filter>

  <filter>
    <filter-name>CharacterEncodingFilter</filter-name>
    <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
    <init-param>
      <param-name>encoding</param-name>
      <param-value>UTF-8</param-value>
    </init-param>
    <init-param>
      <param-name>forceEncoding</param-name>
      <param-value>true</param-value>
    </init-param>
  </filter>

  <filter>
    <filter-name>HstFilter</filter-name>
    <filter-class>org.hippoecm.hst.container.HstFilter</filter-class>
    <!--
      HST Application Context Namespace Prefix. This should be unique
      among multiple HST-based application contexts.
    -->
    <!--
      <init-param> <param-name>hstContextNamespace</param-name>
      <param-value>news</param-value> </init-param>
    -->
    <!--
      HST-2 based SITE application can define and assemble its own
      components by uncommenting the following two init parameters and
      set the spring configuration files properly. The spring
      configuration resources are loaded by the context classloader.
    -->
    <!--
      <init-param> <param-name>clientComponentManagerClass</param-name>
      <param-value>org.hippoecm.hst.component.support.ClientComponentManager</param-value>
      </init-param> <init-param>
      <param-name>clientComponentManagerConfigurations</param-name>
      <param-value>/META-INF/client-assembly/*.xml</param-value>
      </init-param>
    -->
  </filter>

  <filter-mapping>
    <filter-name>RewriteFilter</filter-name>
    <url-pattern>/*</url-pattern>
    <dispatcher>REQUEST</dispatcher>
  </filter-mapping>
  <filter-mapping>
    <filter-name>XSSUrlFilter</filter-name>
    <url-pattern>/*</url-pattern>
    <dispatcher>REQUEST</dispatcher>
  </filter-mapping>

  <filter-mapping>
    <filter-name>CharacterEncodingFilter</filter-name>
    <url-pattern>/*</url-pattern>
    <dispatcher>REQUEST</dispatcher>
  </filter-mapping>

  <filter-mapping>
    <filter-name>HstFilter</filter-name>
    <url-pattern>/*</url-pattern>
    <dispatcher>REQUEST</dispatcher>
  </filter-mapping>

  <!-- Spring Log4j Configuring Listener -->
  <listener>
    <listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
  </listener>

  <servlet>
    <servlet-name>HstSiteConfigServlet</servlet-name>
    <servlet-class>org.hippoecm.hst.site.container.HstSiteConfigServlet</servlet-class>
    <load-on-startup>1</load-on-startup>
  </servlet>

  <servlet>
    <servlet-name>BinariesServlet</servlet-name>
    <servlet-class>org.hippoecm.hst.servlet.BinariesServlet</servlet-class>
  </servlet>

  <servlet>
    <servlet-name>freemarker</servlet-name>
    <servlet-class>org.hippoecm.hst.servlet.HstFreemarkerServlet</servlet-class>
    <!-- FreemarkerServlet settings: -->
    <init-param>
      <param-name>TemplatePath</param-name>
      <param-value>/</param-value>
    </init-param>
    <load-on-startup>200</load-on-startup>
  </servlet>

  <servlet>
    <servlet-name>TemplateComposerResourceServlet</servlet-name>
    <servlet-class>org.springframework.js.resource.ResourceServlet</servlet-class>
    <init-param>
      <param-name>jarPathPrefix</param-name>
      <param-value>/META-INF/hst/pagecomposer</param-value>
    </init-param>
  </servlet>

  <servlet>
    <servlet-name>LoginServlet</servlet-name>
    <servlet-class>org.hippoecm.hst.security.servlet.LoginServlet</servlet-class>
  </servlet>

  <servlet>
    <servlet-name>SecurityResourceServlet</servlet-name>
    <servlet-class>org.springframework.js.resource.ResourceServlet</servlet-class>
    <init-param>
      <param-name>jarPathPrefix</param-name>
      <param-value>/META-INF/hst/security</param-value>
    </init-param>
  </servlet>

  <servlet-mapping>
    <servlet-name>BinariesServlet</servlet-name>
    <url-pattern>/binaries/*</url-pattern>
  </servlet-mapping>

  <servlet-mapping>
    <servlet-name>freemarker</servlet-name>
    <url-pattern>*.ftl</url-pattern>
  </servlet-mapping>

  <servlet-mapping>
    <servlet-name>TemplateComposerResourceServlet</servlet-name>
    <url-pattern>/hst/pagecomposer/sources/*</url-pattern>
  </servlet-mapping>

  <servlet-mapping>
    <servlet-name>LoginServlet</servlet-name>
    <url-pattern>/login/*</url-pattern>
  </servlet-mapping>

  <servlet-mapping>
    <servlet-name>SecurityResourceServlet</servlet-name>
    <url-pattern>/login/hst/security/*</url-pattern>
  </servlet-mapping>

  <security-constraint>
    <web-resource-collection>
      <web-resource-name>Login</web-resource-name>
      <url-pattern>/login/resource</url-pattern>
    </web-resource-collection>
    <auth-constraint>
      <role-name>everybody</role-name>
    </auth-constraint>
  </security-constraint>

  <login-config>
    <auth-method>FORM</auth-method>
    <realm-name>HSTSITE</realm-name>
    <form-login-config>
      <form-login-page>/login/login</form-login-page>
      <form-error-page>/login/error</form-error-page>
    </form-login-config>
  </login-config>

  <security-role>
    <description>Default role of Hippo Repository</description>
    <role-name>everybody</role-name>
  </security-role>

  <error-page>
    <error-code>403</error-code>
    <location>/WEB-INF/jsp/errorpages/ErrorPage403.jsp</location>
  </error-page>

  <error-page>
    <error-code>404</error-code>
    <location>/WEB-INF/jsp/errorpages/ErrorPage404.jsp</location>
  </error-page>

  <error-page>
    <error-code>500</error-code>
    <location>/WEB-INF/jsp/errorpages/ErrorPage500.jsp</location>
  </error-page>

  <error-page>
    <exception-type>Exception</exception-type>
    <location>/WEB-INF/jsp/errorpages/ErrorPage500.jsp</location>
  </error-page>

</web-app>

